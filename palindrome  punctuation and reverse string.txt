#include <iostream>
#include <stack>
#include <cctype>
#include <string>
using namespace std;

// Function to check if a string is a palindrome
bool isPalindrome(const string& str) {
    string filtered;

    // Remove punctuation and spaces, and convert to lowercase
    for (char c : str) {
        if (isalnum(c)) {
            filtered += tolower(c);
        }
    }

    int n = filtered.size();
    for (int i = 0; i < n / 2; i++) {
        if (filtered[i] != filtered[n - i - 1]) {
            return false;
        }
    }
    return true;
}

// Function to reverse a string using a stack
string reverseString(const string& str) {
    stack<char> s;
    string reversed;

    // Push all characters onto the stack
    for (char c : str) {
        s.push(c);
    }

    // Pop all characters from the stack to form the reversed string
    while (!s.empty()) {
        reversed += s.top();
        s.pop();
    }

    return reversed;
}

// Function to remove punctuation from a string
string removePunctuation(const string& str) {
    string cleaned;

    for (char c : str) {
        if (isalnum(c) || isspace(c)) {
            cleaned += c;
        }
    }

    return cleaned;
}

int main() {
    string input;

    cout << "Enter a string: ";
    getline(cin, input);

    // Check if the string is a palindrome
    if (isPalindrome(input)) {
        cout << "The string is a palindrome.\n";
    } else {
        cout << "The string is not a palindrome.\n";
    }

    // Remove punctuation from the string
    string noPunctuation = removePunctuation(input);
    cout << "String without punctuation: " << noPunctuation << "\n";

    // Reverse the string using a stack
    string reversed = reverseString(input);
    cout << "Reversed string: " << reversed << "\n";

    return 0;
}