#include <iostream>
#include <string>
#include <sstream>
#include <vector>

using namespace std;

struct Transaction {
    string type; // "deposit" or "withdrawal"
    double amount;
};

// Function to calculate the net amount from the transaction log
double calculateNetAmount(const vector<Transaction>& transactions) {
    double netAmount = 0.0;

    for (const auto& transaction : transactions) {
        if (transaction.type == "deposit") {
            netAmount += transaction.amount;
        } else if (transaction.type == "withdrawal") {
            netAmount -= transaction.amount;
        } else {
            cout << "Invalid transaction type: " << transaction.type << endl;
        }
    }

    return netAmount;
}

int main() {
    vector<Transaction> transactions;
    string input;
    int n;

    // Input the number of transactions
    cout << "Enter the number of transactions: ";
    cin >> n;
    cin.ignore(); // To consume the newline character after entering the number

    // Input the transactions
    cout << "Enter the transactions in the format (type amount), where type is 'deposit' or 'withdrawal':" << endl;
    for (int i = 0; i < n; ++i) {
        Transaction transaction;
        cout << "Transaction " << i + 1 << ": ";
        getline(cin, input); // Read the entire line

        stringstream ss(input);
        ss >> transaction.type >> transaction.amount; // Split into type and amount

        if (ss.fail() || (transaction.type != "deposit" && transaction.type != "withdrawal")) {
            cout << "Invalid input format for transaction " << i + 1 << ". Please try again." << endl;
            --i; // To retry this transaction
            continue;
        }

        transactions.push_back(transaction);
    }

    // Calculate and display the net amount
    double netAmount = calculateNetAmount(transactions);
    cout << "\nThe net amount in the bank account is: " << netAmount << endl;

    return 0;
}
